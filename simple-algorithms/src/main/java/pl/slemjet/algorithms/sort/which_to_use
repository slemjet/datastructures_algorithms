//#1 - Sort 10 schools around your house by distance:
    InsertionSort (simple and small)

//#2 - eBay sorts listings by the current Bid amount:
    RadixSort CountingSort (because these are limited value number)

//#3 - Sport scores on ESPN
    QuickSort (because data is very random)

//#4 - Massive database (can't fit all into memory) needs to sort through past year's user data
    MergeSort (to get guaranteed performance)

//#5 - Almost sorted Udemy review data needs to update and add 2 new reviews
    InsertionSort(because data is almost sorted)

//#6 - Temperature Records for the past 50 years in Canada
    RadixSort CountingSort (because these are limited value number if are integers)
    QuickSort (for the rest)

//#7 - Large user name database needs to be sorted. Data is very random.
    QuickSort or MergeSort

//#8 - You want to teach sorting for the first time
    InsertionSort